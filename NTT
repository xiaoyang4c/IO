#include<bits/stdc++.h>
using namespace std;
 
typedef long long ll;

#define fi first
#define se second
#define pii pair<int,int>
#define pll pair<long long,long long>
#define pb push_back
#define debug(x) cerr<<#x<<"="<<x<<endl
#define inf 1ll<<60
#define rep(i,a,b) for (ll i=a;i<(b);i++)
#define MP make_pair
#define mod (ll)998244353
#define SZ(x) (int(x.size()))
#define ALL(x) x.begin(),x.end()
#define endl "\n"
ll lowbit(ll x) {return x&(-x);}


ll add(ll a, ll b) {return (a+b>=mod?a+b-mod:a+b);}
ll sub(ll a, ll b) {return (a<b?a-b+mod:a-b);}
ll mul(ll a, ll b) {return (a*b)%mod;}

void scan(ll &x)
{
    char c = getchar_unlocked();
    while (c < '0' || c > '9') {
        c = getchar_unlocked();
    }

    x = 0;
    while (c >= '0' && c <= '9') {
        x = 10 * x + c - 48;
        c = getchar_unlocked();
    }
}

ll expo(ll a, ll b){
	ll res=1;
	while (b){
		if (b%2)res=(res*a)%mod;
		a=(a*a)%mod;
		b/=2;
	}
	return res;
}

#define PRIROOT (ll)3
#define PRIROOT_INV (ll)332748118
ll rev[1<<20+5];

vector<ll>ntt(vector<ll>a,bool inv){
	ll n=a.size();
	rep(i,1,n)if(i<rev[i])swap(a[i],a[rev[i]]);
	for(ll len=2;len<=n;len*=2){
		ll root_val,root_len;
		if(inv)root_val=PRIROOT_INV;
		else root_val=PRIROOT;
		root_len=expo(root_val,mod/len);
		for(ll i=0;i<n;i+=len){
			ll w=1;
			rep(j,0,len/2){
				ll even=a[i+j]%mod, odd=mul(a[i+j+len/2],w);
				a[i+j]=add(even,odd); //butterfly transform
				a[i+j+len/2]=sub(even,odd);
				w=mul(w,root_len);
			}
		}
	}
	if(inv)for(auto &x:a)x=mul(x,expo(n,mod-2)); //multiply by n^-1 for innt
	return a;
}

vector<ll>conv(vector<ll>a,vector<ll>b){
	ll n=1;
	while(n<SZ(a)+SZ(b))n*=2;
	for (int i=1, j=0; i<n; ++i){//stupid bit reversal permutation 
		int c=n/2;
		for (;j&c;c/=2)j^=c;
		j^=c;
		rev[i]=j;
	}
	a.resize(n,0);
	b.resize(n,0);
	a=ntt(a,0);
	b=ntt(b,0);
	rep(i,0,n)a[i]=mul(a[i],b[i]);
	return ntt(a,1);
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	ll n;scan(n);
	vector<ll>a,b,ans;
	rep(i,0,n){
		ll x;scan(x);a.pb(x);
	}
	rep(i,0,n){
		ll x;scan(x);b.pb(x);
	}
	ans=conv(a,b);
	rep(i,0,2*n-1)cout<<ans[i]<<" ";
	return 0;
}

