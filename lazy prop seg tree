const ll maxn=222222;
ll lazy[maxn<<2],tree[maxn<<2];

void pushdown(ll c,ll cl,ll cr){
	ll mid=(cl+cr)>>1;
	lazy[c*2]+=lazy[c];
	lazy[c*2+1]+=lazy[c];
	tree[c*2]+=lazy[c]*(mid-cl+1);
	tree[c*2+1]+=lazy[c]*(cr-mid);
	lazy[c]=0;
}
void update(ll c,ll cl,ll cr,ll l,ll r,ll val){
	if(l<=cl and cr<=r){
		tree[c]+=val*(cr-cl+1);
		lazy[c]+=val;
		return;
	}
	pushdown(c,cl,cr);
	ll mid=(cl+cr)>>1;
	if(l<=mid)update(c*2,cl,mid,l,r,val);
	if(r>mid)update(c*2+1,mid+1,cr,l,r,val);
	tree[c]=tree[c*2]+tree[c*2+1];
}
ll query(ll c,ll cl,ll cr,ll l,ll r){
	if(l<=cl and cr<=r){
		return tree[c];
	}
	pushdown(c,cl,cr);
	ll mid=(cl+cr)>>1;
	ll ans=0;
	if(l<=mid)ans+=query(c*2,cl,mid,l,r);
	if(r>mid)ans+=query(c*2+1,mid+1,cr,l,r);
	return ans;
}
