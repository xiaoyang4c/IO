struct Edge {
    int a, b, cost;
};
vector<Edge>edge;
void solve(){
	ll n,m;cin>>n>>m;
	rep(i,0,m){
		Edge x;
		cin>>x.a>>x.b>>x.cost;
		edge.pb(x);
	}
    vector<ll> d(n+1);
    vector<ll> p(n+1, -1);
    ll x;
    rep(i,0,n){
        x = -1;
        for (Edge e : edge) {
            if (d[e.a] + e.cost < d[e.b]) {
                d[e.b] = d[e.a] + e.cost;
                p[e.b] = e.a;
                x = e.b;
            }
        }
    }
    if (x == -1)
        cout<<"NO"<<endl;
    else {
        ll y = x;
        rep(i,0,n)y = p[y];
        vector<ll> path;
        for (ll cur = y;; cur = p[cur]) {
            path.push_back(cur);
            if (cur == y && path.size() > 1)break;
        }
        reverse(ALL(path));
        cout<<"YES"<<endl;
        for (int u : path)cout << u << ' ';
    }
}
